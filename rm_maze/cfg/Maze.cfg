PACKAGE = "rm_maze"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

draw_type = gen.enum([gen.const("DISABLE", int_t, 0, "DISABLE"),
                       gen.const("RAW", int_t, 1, "RAW"),
                       gen.const("BINARY", int_t, 2, "BINARY"),
                       gen.const("MORPHOLOGY", int_t, 3, "MORPHOLOGY"),
                       gen.const("BARS", int_t, 4, "BARS"),
                       gen.const("ARMORS", int_t, 5, "ARMORS"),
                       gen.const("ARMORS_VERTEXES", int_t, 6, "ARMORS_VERTEXES"),
                       gen.const("BARS_ARMORS", int_t, 7, "BARS_ARMORS"),
                       gen.const("WARP", int_t, 8, "WARP")], "type")

gen.add("draw_type", int_t, 0, "", 0, 0, 8, edit_method=draw_type)

target_color = gen.enum([gen.const("Blue", int_t, 0, "Blue"),
                       gen.const("Red", int_t, 1, "Red"),
                       gen.const("ALL", int_t, 2, "ALL")], "type")
gen.add("target_color", int_t, 0, "", 2, 0, 2, edit_method=target_color)

gen.add("binary_element", int_t, 0, "element of open and close opt", 7, 1, 11)
gen.add("binary_thresh", int_t, 0, "element of open and close opt", 140, 0, 255)
gen.add("canny_low_thresh", int_t, 0, "element of open and close opt", 150, 1, 255)
gen.add("canny_high_thresh", int_t, 0, "element of open and close opt", 150, 1, 255)

gen.add("start_index", int_t, 0, "", 70, 1, 76)
gen.add("end_index", int_t, 0, "", 4, 1, 76)
gen.add("angle_error_test", double_t, 0, "", 0.5, -1, 1)
gen.add("start_send_point", bool_t, 0, "", False)
gen.add("send_debug_point", bool_t, 0, "", False)
gen.add("is_start_trail", bool_t, 0, "", False)
gen.add("error_ratio", double_t, 0, "", 0.2, 0, 1)

gen.add("cof_threshold", double_t, 0, "", 0.5, 0, 1)
gen.add("nms_area_threshold", double_t, 0, "", 0.5, 0, 1)
gen.add("rotate", bool_t, 0, "whether rotate", False)
gen.add("twelve_classes", bool_t, 0, "type of classification", True)

exit(gen.generate(PACKAGE, "rm_maze", "Maze"))
